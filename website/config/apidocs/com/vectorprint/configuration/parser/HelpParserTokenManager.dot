#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.vectorprint.configuration.parser.SimpleCharStream
	c2230 [label=<<table title="com.vectorprint.configuration.parser.SimpleCharStream" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimpleCharStream.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SimpleCharStream </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + staticFlag : boolean </td></tr>
<tr><td align="left" balign="left"> + bufpos : int </td></tr>
<tr><td align="left" balign="left"> # bufline : int[] </td></tr>
<tr><td align="left" balign="left"> # bufcolumn : int[] </td></tr>
<tr><td align="left" balign="left"> # column : int </td></tr>
<tr><td align="left" balign="left"> # line : int </td></tr>
<tr><td align="left" balign="left"> # prevCharIsCR : boolean </td></tr>
<tr><td align="left" balign="left"> # prevCharIsLF : boolean </td></tr>
<tr><td align="left" balign="left"> # inputStream : Reader </td></tr>
<tr><td align="left" balign="left"> # buffer : char[] </td></tr>
<tr><td align="left" balign="left"> # maxNextCharInd : int </td></tr>
<tr><td align="left" balign="left"> # inBuf : int </td></tr>
<tr><td align="left" balign="left"> # tabSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : Reader, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : Reader, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : Reader) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream, encoding : String, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream, encoding : String, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream, encoding : String) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream) </td></tr>
<tr><td align="left" balign="left"> # setTabSize(i : int) </td></tr>
<tr><td align="left" balign="left"> # getTabSize(i : int) : int </td></tr>
<tr><td align="left" balign="left"> # ExpandBuff(wrapAround : boolean) </td></tr>
<tr><td align="left" balign="left"> # FillBuff() </td></tr>
<tr><td align="left" balign="left"> + BeginToken() : char </td></tr>
<tr><td align="left" balign="left"> # UpdateLineColumn(c : char) </td></tr>
<tr><td align="left" balign="left"> + readChar() : char </td></tr>
<tr><td align="left" balign="left"> + getColumn() : int </td></tr>
<tr><td align="left" balign="left"> + getLine() : int </td></tr>
<tr><td align="left" balign="left"> + getEndColumn() : int </td></tr>
<tr><td align="left" balign="left"> + getEndLine() : int </td></tr>
<tr><td align="left" balign="left"> + getBeginColumn() : int </td></tr>
<tr><td align="left" balign="left"> + getBeginLine() : int </td></tr>
<tr><td align="left" balign="left"> + backup(amount : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : Reader, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : Reader, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : Reader) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream, encoding : String, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream, encoding : String) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream, encoding : String, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + GetImage() : String </td></tr>
<tr><td align="left" balign="left"> + GetSuffix(len : int) : char[] </td></tr>
<tr><td align="left" balign="left"> + Done() </td></tr>
<tr><td align="left" balign="left"> + adjustBeginLineColumn(newLine : int, newCol : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleCharStream.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parser.HelpParser
	c2236 [label=<<table title="com.vectorprint.configuration.parser.HelpParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./HelpParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HelpParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + token_source : HelpParserTokenManager </td></tr>
<tr><td align="left" balign="left"> + token : Token </td></tr>
<tr><td align="left" balign="left"> + jj_nt : Token </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HelpParser(stream : InputStream) </td></tr>
<tr><td align="left" balign="left"> + HelpParser(stream : InputStream, encoding : String) </td></tr>
<tr><td align="left" balign="left"> + HelpParser(stream : Reader) </td></tr>
<tr><td align="left" balign="left"> + HelpParser(tm : HelpParserTokenManager) </td></tr>
<tr><td align="left" balign="left"> + parse(h : Map&lt;String, PropertyHelp&gt;) </td></tr>
<tr><td align="left" balign="left"> + help(h : Map&lt;String, PropertyHelp&gt;) </td></tr>
<tr><td align="left" balign="left"> + keyAndType() : String[] </td></tr>
<tr><td align="left" balign="left"> + ReInit(stream : InputStream) </td></tr>
<tr><td align="left" balign="left"> + ReInit(stream : InputStream, encoding : String) </td></tr>
<tr><td align="left" balign="left"> + ReInit(stream : Reader) </td></tr>
<tr><td align="left" balign="left"> + ReInit(tm : HelpParserTokenManager) </td></tr>
<tr><td align="left" balign="left"> + getNextToken() : Token </td></tr>
<tr><td align="left" balign="left"> + getToken(index : int) : Token </td></tr>
<tr><td align="left" balign="left"> + generateParseException() : ParseException </td></tr>
<tr><td align="left" balign="left"> + enable_tracing() </td></tr>
<tr><td align="left" balign="left"> + disable_tracing() </td></tr>
		</table></td></tr>
		</table>>, URL="./HelpParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parser.HelpParserTokenManager
	c2238 [label=<<table title="com.vectorprint.configuration.parser.HelpParserTokenManager" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./HelpParserTokenManager.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HelpParserTokenManager </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + debugStream : PrintStream </td></tr>
<tr><td align="left" balign="left"> + jjstrLiteralImages : String[] </td></tr>
<tr><td align="left" balign="left"> + lexStateNames : String[] </td></tr>
<tr><td align="left" balign="left"> + jjnewLexState : int[] </td></tr>
<tr><td align="left" balign="left"> # input_stream : SimpleCharStream </td></tr>
<tr><td align="left" balign="left"> # curChar : char </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HelpParserTokenManager(stream : SimpleCharStream) </td></tr>
<tr><td align="left" balign="left"> + HelpParserTokenManager(stream : SimpleCharStream, lexState : int) </td></tr>
<tr><td align="left" balign="left"> + setDebugStream(ds : PrintStream) </td></tr>
<tr><td align="left" balign="left"> + ReInit(stream : SimpleCharStream) </td></tr>
<tr><td align="left" balign="left"> + ReInit(stream : SimpleCharStream, lexState : int) </td></tr>
<tr><td align="left" balign="left"> + SwitchTo(lexState : int) </td></tr>
<tr><td align="left" balign="left"> # jjFillToken() : Token </td></tr>
<tr><td align="left" balign="left"> + getNextToken() : Token </td></tr>
		</table></td></tr>
		</table>>, URL="./HelpParserTokenManager.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parser.HelpParserConstants
	c2240 [label=<<table title="com.vectorprint.configuration.parser.HelpParserConstants" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./HelpParserConstants.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> HelpParserConstants </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EOF : int </td></tr>
<tr><td align="left" balign="left"> + EQ : int </td></tr>
<tr><td align="left" balign="left"> + SEMICOLON : int </td></tr>
<tr><td align="left" balign="left"> + KEY : int </td></tr>
<tr><td align="left" balign="left"> + LETTER : int </td></tr>
<tr><td align="left" balign="left"> + PART_LETTER : int </td></tr>
<tr><td align="left" balign="left"> + TYPE : int </td></tr>
<tr><td align="left" balign="left"> + VALUE : int </td></tr>
<tr><td align="left" balign="left"> + CONTINUATION : int </td></tr>
<tr><td align="left" balign="left"> + EOL : int </td></tr>
<tr><td align="left" balign="left"> + DEFAULT : int </td></tr>
<tr><td align="left" balign="left"> + TYPESTATE : int </td></tr>
<tr><td align="left" balign="left"> + VALUESTATE : int </td></tr>
<tr><td align="left" balign="left"> + tokenImage : String[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="./HelpParserConstants.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.vectorprint.configuration.parser.HelpParser implements com.vectorprint.configuration.parser.HelpParserConstants
	c2240:p -> c2236:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parser.HelpParserTokenManager implements com.vectorprint.configuration.parser.HelpParserConstants
	c2240:p -> c2238:p [dir=back,arrowtail=empty,style=dashed];
	// com.vectorprint.configuration.parser.HelpParser COMPOSED com.vectorprint.configuration.parser.HelpParserTokenManager
	c2236:p -> c2238:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// com.vectorprint.configuration.parser.HelpParser COMPOSED com.vectorprint.configuration.parser.SimpleCharStream
	c2236:p -> c2230:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// com.vectorprint.configuration.parser.HelpParserTokenManager COMPOSED com.vectorprint.configuration.parser.SimpleCharStream
	c2238:p -> c2230:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
}

