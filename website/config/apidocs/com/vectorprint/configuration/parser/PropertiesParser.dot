#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.vectorprint.configuration.parser.SimpleCharStream
	c5838 [label=<<table title="com.vectorprint.configuration.parser.SimpleCharStream" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimpleCharStream.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SimpleCharStream </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + staticFlag : boolean </td></tr>
<tr><td align="left" balign="left"> + bufpos : int </td></tr>
<tr><td align="left" balign="left"> # bufline : int[] </td></tr>
<tr><td align="left" balign="left"> # bufcolumn : int[] </td></tr>
<tr><td align="left" balign="left"> # column : int </td></tr>
<tr><td align="left" balign="left"> # line : int </td></tr>
<tr><td align="left" balign="left"> # prevCharIsCR : boolean </td></tr>
<tr><td align="left" balign="left"> # prevCharIsLF : boolean </td></tr>
<tr><td align="left" balign="left"> # inputStream : Reader </td></tr>
<tr><td align="left" balign="left"> # buffer : char[] </td></tr>
<tr><td align="left" balign="left"> # maxNextCharInd : int </td></tr>
<tr><td align="left" balign="left"> # inBuf : int </td></tr>
<tr><td align="left" balign="left"> # tabSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : Reader, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : Reader, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : Reader) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream, encoding : String, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream, encoding : String, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream, encoding : String) </td></tr>
<tr><td align="left" balign="left"> + SimpleCharStream(dstream : InputStream) </td></tr>
<tr><td align="left" balign="left"> # setTabSize(i : int) </td></tr>
<tr><td align="left" balign="left"> # getTabSize(i : int) : int </td></tr>
<tr><td align="left" balign="left"> # ExpandBuff(wrapAround : boolean) </td></tr>
<tr><td align="left" balign="left"> # FillBuff() </td></tr>
<tr><td align="left" balign="left"> + BeginToken() : char </td></tr>
<tr><td align="left" balign="left"> # UpdateLineColumn(c : char) </td></tr>
<tr><td align="left" balign="left"> + readChar() : char </td></tr>
<tr><td align="left" balign="left"> + getColumn() : int </td></tr>
<tr><td align="left" balign="left"> + getLine() : int </td></tr>
<tr><td align="left" balign="left"> + getEndColumn() : int </td></tr>
<tr><td align="left" balign="left"> + getEndLine() : int </td></tr>
<tr><td align="left" balign="left"> + getBeginColumn() : int </td></tr>
<tr><td align="left" balign="left"> + getBeginLine() : int </td></tr>
<tr><td align="left" balign="left"> + backup(amount : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : Reader, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : Reader, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : Reader) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream, encoding : String, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream, startline : int, startcolumn : int, buffersize : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream, encoding : String) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream, encoding : String, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + ReInit(dstream : InputStream, startline : int, startcolumn : int) </td></tr>
<tr><td align="left" balign="left"> + GetImage() : String </td></tr>
<tr><td align="left" balign="left"> + GetSuffix(len : int) : char[] </td></tr>
<tr><td align="left" balign="left"> + Done() </td></tr>
<tr><td align="left" balign="left"> + adjustBeginLineColumn(newLine : int, newCol : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleCharStream.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parser.Token
	c5841 [label=<<table title="com.vectorprint.configuration.parser.Token" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Token.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Token </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + kind : int </td></tr>
<tr><td align="left" balign="left"> + beginLine : int </td></tr>
<tr><td align="left" balign="left"> + beginColumn : int </td></tr>
<tr><td align="left" balign="left"> + endLine : int </td></tr>
<tr><td align="left" balign="left"> + endColumn : int </td></tr>
<tr><td align="left" balign="left"> + image : String </td></tr>
<tr><td align="left" balign="left"> + next : Token </td></tr>
<tr><td align="left" balign="left"> + specialToken : Token </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Token() </td></tr>
<tr><td align="left" balign="left"> + Token(kind : int) </td></tr>
<tr><td align="left" balign="left"> + Token(kind : int, image : String) </td></tr>
<tr><td align="left" balign="left"> + getValue() : Object </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + newToken(ofKind : int, image : String) : Token </td></tr>
<tr><td align="left" balign="left"> + newToken(ofKind : int) : Token </td></tr>
		</table></td></tr>
		</table>>, URL="./Token.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parser.PropertiesParser
	c5842 [label=<<table title="com.vectorprint.configuration.parser.PropertiesParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./PropertiesParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PropertiesParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + token_source : PropertiesParserTokenManager </td></tr>
<tr><td align="left" balign="left"> + token : Token </td></tr>
<tr><td align="left" balign="left"> + jj_nt : Token </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PropertiesParser(stream : InputStream) </td></tr>
<tr><td align="left" balign="left"> + PropertiesParser(stream : InputStream, encoding : String) </td></tr>
<tr><td align="left" balign="left"> + PropertiesParser(stream : Reader) </td></tr>
<tr><td align="left" balign="left"> + PropertiesParser(tm : PropertiesParserTokenManager) </td></tr>
<tr><td align="left" balign="left"> + parse(properties : Map&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + keyValue() : String[] </td></tr>
<tr><td align="left" balign="left"> + ReInit(stream : InputStream) </td></tr>
<tr><td align="left" balign="left"> + ReInit(stream : InputStream, encoding : String) </td></tr>
<tr><td align="left" balign="left"> + ReInit(stream : Reader) </td></tr>
<tr><td align="left" balign="left"> + ReInit(tm : PropertiesParserTokenManager) </td></tr>
<tr><td align="left" balign="left"> + getNextToken() : Token </td></tr>
<tr><td align="left" balign="left"> + getToken(index : int) : Token </td></tr>
<tr><td align="left" balign="left"> + generateParseException() : ParseException </td></tr>
<tr><td align="left" balign="left"> + enable_tracing() </td></tr>
<tr><td align="left" balign="left"> + disable_tracing() </td></tr>
		</table></td></tr>
		</table>>, URL="./PropertiesParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parser.PropertiesParserTokenManager
	c5843 [label=<<table title="com.vectorprint.configuration.parser.PropertiesParserTokenManager" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PropertiesParserTokenManager.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PropertiesParserTokenManager </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + debugStream : PrintStream </td></tr>
<tr><td align="left" balign="left"> + jjstrLiteralImages : String[] </td></tr>
<tr><td align="left" balign="left"> + lexStateNames : String[] </td></tr>
<tr><td align="left" balign="left"> + jjnewLexState : int[] </td></tr>
<tr><td align="left" balign="left"> # input_stream : SimpleCharStream </td></tr>
<tr><td align="left" balign="left"> # curChar : char </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PropertiesParserTokenManager(stream : SimpleCharStream) </td></tr>
<tr><td align="left" balign="left"> + PropertiesParserTokenManager(stream : SimpleCharStream, lexState : int) </td></tr>
<tr><td align="left" balign="left"> + setDebugStream(ds : PrintStream) </td></tr>
<tr><td align="left" balign="left"> + ReInit(stream : SimpleCharStream) </td></tr>
<tr><td align="left" balign="left"> + ReInit(stream : SimpleCharStream, lexState : int) </td></tr>
<tr><td align="left" balign="left"> + SwitchTo(lexState : int) </td></tr>
<tr><td align="left" balign="left"> # jjFillToken() : Token </td></tr>
<tr><td align="left" balign="left"> + getNextToken() : Token </td></tr>
		</table></td></tr>
		</table>>, URL="./PropertiesParserTokenManager.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parser.PropertiesParserConstants
	c5854 [label=<<table title="com.vectorprint.configuration.parser.PropertiesParserConstants" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PropertiesParserConstants.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> PropertiesParserConstants </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EOF : int </td></tr>
<tr><td align="left" balign="left"> + COMMENT : int </td></tr>
<tr><td align="left" balign="left"> + KEY : int </td></tr>
<tr><td align="left" balign="left"> + LETTER : int </td></tr>
<tr><td align="left" balign="left"> + PART_LETTER : int </td></tr>
<tr><td align="left" balign="left"> + CONTINUATION : int </td></tr>
<tr><td align="left" balign="left"> + VALUE : int </td></tr>
<tr><td align="left" balign="left"> + EOL : int </td></tr>
<tr><td align="left" balign="left"> + DEFAULT : int </td></tr>
<tr><td align="left" balign="left"> + IN_SINGLE_LINE_COMMENT : int </td></tr>
<tr><td align="left" balign="left"> + VALUESTATE : int </td></tr>
<tr><td align="left" balign="left"> + tokenImage : String[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="./PropertiesParserConstants.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.vectorprint.configuration.parser.PropertiesParser implements com.vectorprint.configuration.parser.PropertiesParserConstants
	c5854:p -> c5842:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parser.PropertiesParserTokenManager implements com.vectorprint.configuration.parser.PropertiesParserConstants
	c5854:p -> c5843:p [dir=back,arrowtail=empty,style=dashed];
	// com.vectorprint.configuration.parser.Token COMPOSED com.vectorprint.configuration.parser.Token
	c5841:p -> c5841:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// com.vectorprint.configuration.parser.Token COMPOSED com.vectorprint.configuration.parser.Token
	c5841:p -> c5841:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// com.vectorprint.configuration.parser.PropertiesParser COMPOSED com.vectorprint.configuration.parser.PropertiesParserTokenManager
	c5842:p -> c5843:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// com.vectorprint.configuration.parser.PropertiesParser COMPOSED com.vectorprint.configuration.parser.SimpleCharStream
	c5842:p -> c5838:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// com.vectorprint.configuration.parser.PropertiesParser COMPOSED com.vectorprint.configuration.parser.Token
	c5842:p -> c5841:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// com.vectorprint.configuration.parser.PropertiesParser COMPOSED com.vectorprint.configuration.parser.Token
	c5842:p -> c5841:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// com.vectorprint.configuration.parser.PropertiesParserTokenManager COMPOSED com.vectorprint.configuration.parser.SimpleCharStream
	c5843:p -> c5838:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
}

