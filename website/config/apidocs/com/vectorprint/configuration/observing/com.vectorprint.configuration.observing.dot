#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.vectorprint.configuration.observing.HandleEmptyValues
	c386 [label=<<table title="com.vectorprint.configuration.observing.HandleEmptyValues" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./HandleEmptyValues.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HandleEmptyValues </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ALLOW_EMPTY_SETTINGS : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + HandleEmptyValues(allowEmpty : boolean) </td></tr>
<tr><td align="left" balign="left"> + prepare(key : String, value : String) : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./HandleEmptyValues.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.observing.PrepareKeyValue<K extends java.io.Serializable, V extends java.io.Serializable>
	c387 [label=<<table title="com.vectorprint.configuration.observing.PrepareKeyValue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PrepareKeyValue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> PrepareKeyValue&lt;K extends Serializable, V extends Serializable&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + prepare(key : K, value : V) : Map&lt;K, V&gt; </td></tr>
<tr><td align="left" balign="left"> + shouldPrepare(key : K, value : V) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./PrepareKeyValue.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.observing.AbstractPrepareKeyValue<K extends java.io.Serializable, V extends java.io.Serializable>
	c388 [label=<<table title="com.vectorprint.configuration.observing.AbstractPrepareKeyValue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractPrepareKeyValue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractPrepareKeyValue&lt;K extends Serializable, V extends Serializable&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractPrepareKeyValue() </td></tr>
<tr><td align="left" balign="left"> + shouldPrepare(key : K, value : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + addKeyToSkip(key : K) : AbstractPrepareKeyValue&lt;K, V&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractPrepareKeyValue.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.observing.KeyValueObservable<K extends java.io.Serializable, V extends java.io.Serializable>
	c389 [label=<<table title="com.vectorprint.configuration.observing.KeyValueObservable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./KeyValueObservable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> KeyValueObservable&lt;K extends Serializable, V extends Serializable&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + addObserver(observer : PrepareKeyValue&lt;K, V&gt;) </td></tr>
<tr><td align="left" balign="left"> + removeObserver(observer : PKV) : PKV </td></tr>
<tr><td align="left" balign="left"> + prepareKeyValue(key : K, value : V) : Map&lt;K, V&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./KeyValueObservable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.observing.TrimKeyValue
	c390 [label=<<table title="com.vectorprint.configuration.observing.TrimKeyValue" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TrimKeyValue.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TrimKeyValue </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TrimKeyValue() </td></tr>
<tr><td align="left" balign="left"> + prepare(key : String, value : String) : Map&lt;String, String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./TrimKeyValue.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.vectorprint.configuration.observing.HandleEmptyValues extends com.vectorprint.configuration.observing.AbstractPrepareKeyValue<java.lang.String, java.lang.String>
	c388:p -> c386:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.observing.AbstractPrepareKeyValue<K extends java.io.Serializable, V extends java.io.Serializable> implements com.vectorprint.configuration.observing.PrepareKeyValue<K extends java.io.Serializable, V extends java.io.Serializable>
	c387:p -> c388:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.observing.TrimKeyValue extends com.vectorprint.configuration.observing.AbstractPrepareKeyValue<java.lang.String, java.lang.String>
	c388:p -> c390:p [dir=back,arrowtail=empty];
}

