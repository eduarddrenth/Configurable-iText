#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.vectorprint.configuration.parameters.ParameterImpl<TYPE extends java.io.Serializable>
	c0 [label=<<table title="com.vectorprint.configuration.parameters.ParameterImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ParameterImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ParameterImpl&lt;TYPE extends Serializable&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ParameterImpl(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + getKey() : String </td></tr>
<tr><td align="left" balign="left"> + setKey(key : String) </td></tr>
<tr><td align="left" balign="left"> + getHelp() : String </td></tr>
<tr><td align="left" balign="left"> + setHelp(help : String) </td></tr>
<tr><td align="left" balign="left"> + getValue() : TYPE </td></tr>
<tr><td align="left" balign="left"> + getDefault() : TYPE </td></tr>
<tr><td align="left" balign="left"> + setValue(value : TYPE) : Parameter&lt;TYPE&gt; </td></tr>
<tr><td align="left" balign="left"> + setDefault(value : TYPE) : Parameter&lt;TYPE&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> # valueToString(value : Object) : String </td></tr>
<tr><td align="left" balign="left"> # append(o : Object, sb : StringBuilder) </td></tr>
<tr><td align="left" balign="left"> # serializeArray(array : Object, clazz : Class&lt;&gt;) : String </td></tr>
<tr><td align="left" balign="left"> + serializeValue(value : TYPE) : String </td></tr>
<tr><td align="left" balign="left"> + clone() : Parameter&lt;TYPE&gt; </td></tr>
<tr><td align="left" balign="left"> + addObserver(o : Parameterizable) </td></tr>
		</table></td></tr>
		</table>>, URL="./ParameterImpl.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.CharPasswordParameter
	c1 [label=<<table title="com.vectorprint.configuration.parameters.CharPasswordParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CharPasswordParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CharPasswordParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CharPasswordParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + CharPasswordParameter(key : String, help : String, clearAfterGet : boolean) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : char[] </td></tr>
<tr><td align="left" balign="left"> + setDefault(value : char[]) : Parameter&lt;char&gt; </td></tr>
<tr><td align="left" balign="left"> + getDefault() : char[] </td></tr>
<tr><td align="left" balign="left"> + getValue() : char[] </td></tr>
		</table></td></tr>
		</table>>, URL="./CharPasswordParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.Parameter<TYPE extends java.io.Serializable>
	c2 [label=<<table title="com.vectorprint.configuration.parameters.Parameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Parameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Parameter&lt;TYPE extends Serializable&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getKey() : String </td></tr>
<tr><td align="left" balign="left"> + getHelp() : String </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : TYPE </td></tr>
<tr><td align="left" balign="left"> + serializeValue(value : TYPE) : String </td></tr>
<tr><td align="left" balign="left"> + setValue(value : TYPE) : Parameter&lt;TYPE&gt; </td></tr>
<tr><td align="left" balign="left"> + setDefault(value : TYPE) : Parameter&lt;TYPE&gt; </td></tr>
<tr><td align="left" balign="left"> + getValue() : TYPE </td></tr>
<tr><td align="left" balign="left"> + getDefault() : TYPE </td></tr>
<tr><td align="left" balign="left"> + clone() : Parameter&lt;TYPE&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./Parameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.StringParameter
	c3 [label=<<table title="com.vectorprint.configuration.parameters.StringParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./StringParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StringParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + StringParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./StringParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.FloatArrayParameter
	c4 [label=<<table title="com.vectorprint.configuration.parameters.FloatArrayParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FloatArrayParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FloatArrayParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FloatArrayParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : Float[] </td></tr>
		</table></td></tr>
		</table>>, URL="./FloatArrayParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.DoubleArrayParameter
	c5 [label=<<table title="com.vectorprint.configuration.parameters.DoubleArrayParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DoubleArrayParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DoubleArrayParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DoubleArrayParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : Double[] </td></tr>
		</table></td></tr>
		</table>>, URL="./DoubleArrayParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.ParameterizableImpl
	c6 [label=<<table title="com.vectorprint.configuration.parameters.ParameterizableImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ParameterizableImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ParameterizableImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + processor : ParamAnnotationProcessor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ParameterizableImpl() </td></tr>
<tr><td align="left" balign="left"> + addParameter(parameter : Parameter&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getParameter(key : String, T : Class&lt;TYPE&gt;) : Parameter&lt;TYPE&gt; </td></tr>
<tr><td align="left" balign="left"> + getParameters() : Map&lt;String, Parameter&lt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getValue(key : String, T : Class&lt;TYPE&gt;) : TYPE </td></tr>
<tr><td align="left" balign="left"> + setValue(key : String, value : TYPE) </td></tr>
<tr><td align="left" balign="left"> + setup(args : Map&lt;String, String&gt;, settings : Map&lt;String, String&gt;) </td></tr>
<tr><td align="left" balign="left"> + clone() : Parameterizable </td></tr>
<tr><td align="left" balign="left"> + isParameterSet(key : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + update(o : Observable, arg : Object) </td></tr>
		</table></td></tr>
		</table>>, URL="./ParameterizableImpl.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser
	c7 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MultipleValueParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + STRING_PARSER : MultipleValueParser.StringParser </td></tr>
<tr><td align="left" balign="left"> + INT_PARSER : MultipleValueParser.IntParser </td></tr>
<tr><td align="left" balign="left"> + CHAR_PARSER : MultipleValueParser.CharParser </td></tr>
<tr><td align="left" balign="left"> + SHORT_PARSER : MultipleValueParser.ShortParser </td></tr>
<tr><td align="left" balign="left"> + BYTE_PARSER : MultipleValueParser.ByteParser </td></tr>
<tr><td align="left" balign="left"> + LONG_PARSER : MultipleValueParser.LongParser </td></tr>
<tr><td align="left" balign="left"> + FLOAT_PARSER : MultipleValueParser.FloatParser </td></tr>
<tr><td align="left" balign="left"> + DOUBLE_PARSER : MultipleValueParser.DoubleParser </td></tr>
<tr><td align="left" balign="left"> + URL_PARSER : MultipleValueParser.URLParser </td></tr>
<tr><td align="left" balign="left"> + CLASS_PARSER : MultipleValueParser.ClassParser </td></tr>
<tr><td align="left" balign="left"> + BOOLEAN_PARSER : MultipleValueParser.BooleanParser </td></tr>
<tr><td align="left" balign="left"> + COLOR_PARSER : MultipleValueParser.ColorParser </td></tr>
<tr><td align="left" balign="left"> + DATE_PARSER : MultipleValueParser.DateParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getParamInstance() : MultipleValueParser </td></tr>
<tr><td align="left" balign="left"> + getInstance() : MultipleValueParser </td></tr>
<tr><td align="left" balign="left"> + parseValues(values : String, parser : ValueParser&lt;T&gt;, trim : boolean) : List&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + parseFloatValues(values : String, trim : boolean) : List&lt;Float&gt; </td></tr>
<tr><td align="left" balign="left"> + parseDateValues(values : String, trim : boolean) : List&lt;Date&gt; </td></tr>
<tr><td align="left" balign="left"> + parseLongValues(values : String, trim : boolean) : List&lt;Long&gt; </td></tr>
<tr><td align="left" balign="left"> + parseCharValues(values : String, trim : boolean) : List&lt;Character&gt; </td></tr>
<tr><td align="left" balign="left"> + parseShortValues(values : String, trim : boolean) : List&lt;Short&gt; </td></tr>
<tr><td align="left" balign="left"> + parseByteValues(values : String, trim : boolean) : List&lt;Byte&gt; </td></tr>
<tr><td align="left" balign="left"> + parseDoubleValues(values : String, trim : boolean) : List&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + parseIntValues(values : String, trim : boolean) : List&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + parseStringValues(values : String, trim : boolean) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + parseURLValues(values : String, trim : boolean) : List&lt;URL&gt; </td></tr>
<tr><td align="left" balign="left"> + parseClassValues(values : String, trim : boolean) : List&lt;Class&lt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + parseColorValues(values : String, trim : boolean) : List&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + parseBooleanValues(values : String, trim : boolean) : List&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + classFromKey(key : String) : Class&lt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.FloatParser
	c8 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.FloatParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.FloatParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FloatParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.FloatParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : Float </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.FloatParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.LongParser
	c9 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.LongParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.LongParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LongParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.LongParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : Long </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.LongParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.DoubleParser
	c10 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.DoubleParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.DoubleParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DoubleParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.DoubleParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : Double </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.DoubleParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.BooleanParser
	c11 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.BooleanParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.BooleanParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BooleanParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.BooleanParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : Boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.BooleanParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.ColorParser
	c12 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.ColorParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.ColorParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ColorParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.ColorParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(value : String) : Color </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.ColorParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.URLParser
	c13 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.URLParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.URLParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> URLParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.URLParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : URL </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.URLParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.ClassParser
	c14 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.ClassParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.ClassParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.ClassParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : Class&lt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.ClassParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.IntParser
	c15 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.IntParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.IntParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> IntParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.IntParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : Integer </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.IntParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.StringParser
	c16 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.StringParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.StringParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StringParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.StringParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.StringParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.CharParser
	c17 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.CharParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.CharParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CharParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.CharParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : Character </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.CharParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.ShortParser
	c18 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.ShortParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.ShortParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ShortParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.ShortParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : Short </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.ShortParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.ByteParser
	c19 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.ByteParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.ByteParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ByteParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.ByteParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : Byte </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.ByteParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.MultipleValueParser.DateParser
	c20 [label=<<table title="com.vectorprint.configuration.parameters.MultipleValueParser.DateParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MultipleValueParser.DateParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DateParser </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MultipleValueParser.DateParser() </td></tr>
<tr><td align="left" balign="left"> + parseString(val : String) : Date </td></tr>
		</table></td></tr>
		</table>>, URL="./MultipleValueParser.DateParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.StringArrayParameter
	c21 [label=<<table title="com.vectorprint.configuration.parameters.StringArrayParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./StringArrayParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StringArrayParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + StringArrayParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : String[] </td></tr>
		</table></td></tr>
		</table>>, URL="./StringArrayParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.ColorParameter
	c22 [label=<<table title="com.vectorprint.configuration.parameters.ColorParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ColorParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ColorParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ColorParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : Color </td></tr>
<tr><td align="left" balign="left"> # valueToString(value : Object) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./ColorParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.ValueParser<T>
	c23 [label=<<table title="com.vectorprint.configuration.parameters.ValueParser" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ValueParser.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ValueParser&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + parseString(val : String) : T </td></tr>
		</table></td></tr>
		</table>>, URL="./ValueParser.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.ClassParameter
	c24 [label=<<table title="com.vectorprint.configuration.parameters.ClassParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ClassParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ClassParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ClassParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : Class&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # valueToString(value : Object) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./ClassParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.Parameterizable
	c25 [label=<<table title="com.vectorprint.configuration.parameters.Parameterizable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Parameterizable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Parameterizable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getParameters() : Map&lt;String, Parameter&lt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getParameter(key : String, T : Class&lt;TYPE&gt;) : Parameter&lt;TYPE&gt; </td></tr>
<tr><td align="left" balign="left"> + getValue(key : String, T : Class&lt;TYPE&gt;) : TYPE </td></tr>
<tr><td align="left" balign="left"> + setValue(key : String, value : TYPE) </td></tr>
<tr><td align="left" balign="left"> + setup(args : Map&lt;String, String&gt;, settings : Map&lt;String, String&gt;) </td></tr>
<tr><td align="left" balign="left"> + addParameter(parameter : Parameter&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + clone() : Parameterizable </td></tr>
<tr><td align="left" balign="left"> + isParameterSet(key : String) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./Parameterizable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.IntArrayParameter
	c26 [label=<<table title="com.vectorprint.configuration.parameters.IntArrayParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./IntArrayParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> IntArrayParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + IntArrayParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : Integer[] </td></tr>
		</table></td></tr>
		</table>>, URL="./IntArrayParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.DoubleParameter
	c27 [label=<<table title="com.vectorprint.configuration.parameters.DoubleParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DoubleParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DoubleParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DoubleParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : Double </td></tr>
		</table></td></tr>
		</table>>, URL="./DoubleParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.BooleanParameter
	c28 [label=<<table title="com.vectorprint.configuration.parameters.BooleanParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BooleanParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BooleanParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BooleanParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : Boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./BooleanParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.RegexParameter
	c29 [label=<<table title="com.vectorprint.configuration.parameters.RegexParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RegexParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RegexParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RegexParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : Pattern </td></tr>
		</table></td></tr>
		</table>>, URL="./RegexParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.ParameterHelper
	c30 [label=<<table title="com.vectorprint.configuration.parameters.ParameterHelper" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ParameterHelper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ParameterHelper </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ParameterHelper() </td></tr>
<tr><td align="left" balign="left"> + findDefaultKey(key : String, clazz : Class&lt;&gt;, settings : Map&lt;String, String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> + setup(p : Parameterizable, args : Map&lt;String, String&gt;, settings : Map&lt;String, String&gt;) </td></tr>
<tr><td align="left" balign="left"> + toConfig(parameterizable : Parameterizable, printOnlyNonDefault : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + toConfig(parameters : Collection&lt;Parameter&lt;&gt;&gt;, printOnlyNonDefault : boolean) : StringBuilder </td></tr>
<tr><td align="left" balign="left"> + toConfig(p : Parameter&lt;&gt;, printOnlyNonDefault : boolean) : StringBuilder </td></tr>
<tr><td align="left" balign="left"> + getColorFromString(value : String) : Color </td></tr>
		</table></td></tr>
		</table>>, URL="./ParameterHelper.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.IntParameter
	c31 [label=<<table title="com.vectorprint.configuration.parameters.IntParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./IntParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> IntParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + IntParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : Integer </td></tr>
		</table></td></tr>
		</table>>, URL="./IntParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.PasswordParameter
	c32 [label=<<table title="com.vectorprint.configuration.parameters.PasswordParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PasswordParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PasswordParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PasswordParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + PasswordParameter(key : String, help : String, clearAfterGet : boolean) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getValue() : byte[] </td></tr>
<tr><td align="left" balign="left"> + setDefault(value : byte[]) : Parameter&lt;byte&gt; </td></tr>
<tr><td align="left" balign="left"> + getDefault() : byte[] </td></tr>
		</table></td></tr>
		</table>>, URL="./PasswordParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.Observable
	c33 [label=<<table title="com.vectorprint.configuration.parameters.Observable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Observable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Observable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + addObserver(o : Parameterizable) </td></tr>
		</table></td></tr>
		</table>>, URL="./Observable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.URLParameter
	c34 [label=<<table title="com.vectorprint.configuration.parameters.URLParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./URLParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> URLParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + URLParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : URL </td></tr>
		</table></td></tr>
		</table>>, URL="./URLParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.vectorprint.configuration.parameters.FloatParameter
	c35 [label=<<table title="com.vectorprint.configuration.parameters.FloatParameter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FloatParameter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FloatParameter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FloatParameter(key : String, help : String) </td></tr>
<tr><td align="left" balign="left"> + convert(value : String) : Float </td></tr>
		</table></td></tr>
		</table>>, URL="./FloatParameter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.vectorprint.configuration.parameters.ParameterImpl<TYPE extends java.io.Serializable> implements com.vectorprint.configuration.parameters.Parameter<TYPE extends java.io.Serializable>
	c2:p -> c0:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.CharPasswordParameter extends com.vectorprint.configuration.parameters.ParameterImpl<char[]>
	c0:p -> c1:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.Parameter<TYPE extends java.io.Serializable> implements com.vectorprint.configuration.parameters.Observable
	c33:p -> c2:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.StringParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.lang.String>
	c0:p -> c3:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.FloatArrayParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.lang.Float[]>
	c0:p -> c4:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.DoubleArrayParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.lang.Double[]>
	c0:p -> c5:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.ParameterizableImpl implements com.vectorprint.configuration.parameters.Parameterizable
	c25:p -> c6:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.FloatParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c8:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.LongParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c9:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.DoubleParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c10:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.BooleanParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c11:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.ColorParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c12:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.URLParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c13:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.ClassParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c14:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.IntParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c15:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.StringParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c16:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.CharParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c17:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.ShortParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c18:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.ByteParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c19:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.MultipleValueParser.DateParser implements com.vectorprint.configuration.parameters.ValueParser<T>
	c23:p -> c20:p [dir=back,arrowtail=empty,style=dashed];
	//com.vectorprint.configuration.parameters.StringArrayParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.lang.String[]>
	c0:p -> c21:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.ColorParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.awt.Color>
	c0:p -> c22:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.ClassParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.lang.Class>
	c0:p -> c24:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.IntArrayParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.lang.Integer[]>
	c0:p -> c26:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.DoubleParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.lang.Double>
	c0:p -> c27:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.BooleanParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.lang.Boolean>
	c0:p -> c28:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.RegexParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.util.regex.Pattern>
	c0:p -> c29:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.IntParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.lang.Integer>
	c0:p -> c31:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.PasswordParameter extends com.vectorprint.configuration.parameters.ParameterImpl<byte[]>
	c0:p -> c32:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.URLParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.net.URL>
	c0:p -> c34:p [dir=back,arrowtail=empty];
	//com.vectorprint.configuration.parameters.FloatParameter extends com.vectorprint.configuration.parameters.ParameterImpl<java.lang.Float>
	c0:p -> c35:p [dir=back,arrowtail=empty];
	// com.vectorprint.configuration.parameters.ParameterizableImpl COMPOSED com.vectorprint.configuration.parameters.Parameter<TYPE extends java.io.Serializable>
	c6:p -> c2:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
}

